app.DOC = null;
app.INDEXDOC = {"entries":[{"name":"2. Language Standards Supported by GCC","path":"standards","type":"2. Language Standards Supported by GCC"},{"name":"3. GCC Command Options","path":"invoking-gcc","type":"3. GCC Command Options"},{"name":"3.1. Option Summary","path":"option-summary","type":"3. GCC Command Options"},{"name":"3.2. Options Controlling the Kind of Output","path":"overall-options","type":"3. GCC Command Options"},{"name":"3.3. Compiling C++ Programs","path":"invoking-g_002b_002b","type":"3. GCC Command Options"},{"name":"3.4. Options Controlling C Dialect","path":"c-dialect-options","type":"3. GCC Command Options"},{"name":"3.5. Options Controlling C++ Dialect","path":"c_002b_002b-dialect-options","type":"3. GCC Command Options"},{"name":"3.6. Options Controlling Objective-C and Objective-C++ Dialects","path":"objective-c-and-objective-c_002b_002b-dialect-options","type":"3. GCC Command Options"},{"name":"3.7. Options to Control Diagnostic Messages Formatting","path":"language-independent-options","type":"3. GCC Command Options"},{"name":"3.8. Options to Request or Suppress Warnings","path":"warning-options","type":"3. GCC Command Options"},{"name":"3.9. Options for Debugging Your Program or GCC","path":"debugging-options","type":"3. GCC Command Options"},{"name":"3.10. Options That Control Optimization","path":"optimize-options","type":"3. GCC Command Options"},{"name":"3.11. Options Controlling the Preprocessor","path":"preprocessor-options","type":"3. GCC Command Options"},{"name":"3.12. Passing Options to the Assembler","path":"assembler-options","type":"3. GCC Command Options"},{"name":"3.13. Options for Linking","path":"link-options","type":"3. GCC Command Options"},{"name":"3.14. Options for Directory Search","path":"directory-options","type":"3. GCC Command Options"},{"name":"3.15. Specifying subprocesses and the switches to pass to them","path":"spec-files","type":"3. GCC Command Options"},{"name":"3.16. Specifying Target Machine and Compiler Version","path":"target-options","type":"3. GCC Command Options"},{"name":"3.17. Hardware Models and Configurations","path":"submodel-options","type":"3. GCC Command Options"},{"name":"3.17.1. AArch64 Options","path":"aarch64-options","type":"3. GCC Command Options"},{"name":"3.17.2. Adapteva Epiphany Options","path":"adapteva-epiphany-options","type":"3. GCC Command Options"},{"name":"3.17.3. ARC Options","path":"arc-options","type":"3. GCC Command Options"},{"name":"3.17.4. ARM Options","path":"arm-options","type":"3. GCC Command Options"},{"name":"3.17.5. AVR Options","path":"avr-options","type":"3. GCC Command Options"},{"name":"3.17.6. Blackfin Options","path":"blackfin-options","type":"3. GCC Command Options"},{"name":"3.17.7. C6X Options","path":"c6x-options","type":"3. GCC Command Options"},{"name":"3.17.8. CRIS Options","path":"cris-options","type":"3. GCC Command Options"},{"name":"3.17.9. CR16 Options","path":"cr16-options","type":"3. GCC Command Options"},{"name":"3.17.10. Darwin Options","path":"darwin-options","type":"3. GCC Command Options"},{"name":"3.17.11. DEC Alpha Options","path":"dec-alpha-options","type":"3. GCC Command Options"},{"name":"3.17.12. FR30 Options","path":"fr30-options","type":"3. GCC Command Options"},{"name":"3.17.13. FRV Options","path":"frv-options","type":"3. GCC Command Options"},{"name":"3.17.14. GNU/Linux Options","path":"gnu_002flinux-options","type":"3. GCC Command Options"},{"name":"3.17.15. H8/300 Options","path":"h8_002f300-options","type":"3. GCC Command Options"},{"name":"3.17.16. HPPA Options","path":"hppa-options","type":"3. GCC Command Options"},{"name":"3.17.17. Intel 386 and AMD x86-64 Options","path":"i386-and-x86-64-options","type":"3. GCC Command Options"},{"name":"3.17.18. i386 and x86-64 Windows Options","path":"i386-and-x86-64-windows-options","type":"3. GCC Command Options"},{"name":"3.17.19. IA-64 Options","path":"ia-64-options","type":"3. GCC Command Options"},{"name":"3.17.20. LM32 Options","path":"lm32-options","type":"3. GCC Command Options"},{"name":"3.17.21. M32C Options","path":"m32c-options","type":"3. GCC Command Options"},{"name":"3.17.22. M32R/D Options","path":"m32r_002fd-options","type":"3. GCC Command Options"},{"name":"3.17.23. M680x0 Options","path":"m680x0-options","type":"3. GCC Command Options"},{"name":"3.17.24. MCore Options","path":"mcore-options","type":"3. GCC Command Options"},{"name":"3.17.25. MeP Options","path":"mep-options","type":"3. GCC Command Options"},{"name":"3.17.26. MicroBlaze Options","path":"microblaze-options","type":"3. GCC Command Options"},{"name":"3.17.27. MIPS Options","path":"mips-options","type":"3. GCC Command Options"},{"name":"3.17.28. MMIX Options","path":"mmix-options","type":"3. GCC Command Options"},{"name":"3.17.29. MN10300 Options","path":"mn10300-options","type":"3. GCC Command Options"},{"name":"3.17.30. Moxie Options","path":"moxie-options","type":"3. GCC Command Options"},{"name":"3.17.31. MSP430 Options","path":"msp430-options","type":"3. GCC Command Options"},{"name":"3.17.32. NDS32 Options","path":"nds32-options","type":"3. GCC Command Options"},{"name":"3.17.33. Nios II Options","path":"nios-ii-options","type":"3. GCC Command Options"},{"name":"3.17.34. PDP-11 Options","path":"pdp-11-options","type":"3. GCC Command Options"},{"name":"3.17.35. picoChip Options","path":"picochip-options","type":"3. GCC Command Options"},{"name":"3.17.36. PowerPC Options","path":"powerpc-options","type":"3. GCC Command Options"},{"name":"3.17.37. RL78 Options","path":"rl78-options","type":"3. GCC Command Options"},{"name":"3.17.38. IBM RS/6000 and PowerPC Options","path":"rs_002f6000-and-powerpc-options","type":"3. GCC Command Options"},{"name":"3.17.39. RX Options","path":"rx-options","type":"3. GCC Command Options"},{"name":"3.17.40. S/390 and zSeries Options","path":"s_002f390-and-zseries-options","type":"3. GCC Command Options"},{"name":"3.17.41. Score Options","path":"score-options","type":"3. GCC Command Options"},{"name":"3.17.42. SH Options","path":"sh-options","type":"3. GCC Command Options"},{"name":"3.17.43. Solaris 2 Options","path":"solaris-2-options","type":"3. GCC Command Options"},{"name":"3.17.44. SPARC Options","path":"sparc-options","type":"3. GCC Command Options"},{"name":"3.17.45. SPU Options","path":"spu-options","type":"3. GCC Command Options"},{"name":"3.17.46. Options for System V","path":"system-v-options","type":"3. GCC Command Options"},{"name":"3.17.47. TILE-Gx Options","path":"tile-gx-options","type":"3. GCC Command Options"},{"name":"3.17.48. TILEPro Options","path":"tilepro-options","type":"3. GCC Command Options"},{"name":"3.17.49. V850 Options","path":"v850-options","type":"3. GCC Command Options"},{"name":"3.17.50. VAX Options","path":"vax-options","type":"3. GCC Command Options"},{"name":"3.17.51. VMS Options","path":"vms-options","type":"3. GCC Command Options"},{"name":"3.17.52. VxWorks Options","path":"vxworks-options","type":"3. GCC Command Options"},{"name":"3.17.53. x86-64 Options","path":"x86-64-options","type":"3. GCC Command Options"},{"name":"3.17.54. Xstormy16 Options","path":"xstormy16-options","type":"3. GCC Command Options"},{"name":"3.17.55. Xtensa Options","path":"xtensa-options","type":"3. GCC Command Options"},{"name":"3.17.56. zSeries Options","path":"zseries-options","type":"3. GCC Command Options"},{"name":"3.18. Options for Code Generation Conventions","path":"code-gen-options","type":"3. GCC Command Options"},{"name":"3.19. Environment Variables Affecting GCC","path":"environment-variables","type":"3. GCC Command Options"},{"name":"3.20. Using Precompiled Headers","path":"precompiled-headers","type":"3. GCC Command Options"},{"name":"4. C Implementation-defined behavior","path":"c-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.1. Translation","path":"translation-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.2. Environment","path":"environment-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.3. Identifiers","path":"identifiers-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.4. Characters","path":"characters-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.5. Integers","path":"integers-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.6. Floating point","path":"floating-point-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.7. Arrays and pointers","path":"arrays-and-pointers-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.8. Hints","path":"hints-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.9. Structures, unions, enumerations, and bit-fields","path":"structures-unions-enumerations-and-bit-fields-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.10. Qualifiers","path":"qualifiers-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.11. Declarators","path":"declarators-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.12. Statements","path":"statements-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.13. Preprocessing directives","path":"preprocessing-directives-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.14. Library functions","path":"library-functions-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.15. Architecture","path":"architecture-implementation","type":"4. C Implementation-defined behavior"},{"name":"4.16. Locale-specific behavior","path":"locale-specific-behavior-implementation","type":"4. C Implementation-defined behavior"},{"name":"5. C++ Implementation-defined behavior","path":"c_002b_002b-implementation","type":"5. C++ Implementation-defined behavior"},{"name":"5.1. Conditionally-supported behavior","path":"conditionally-supported-behavior","type":"5. C++ Implementation-defined behavior"},{"name":"5.2. Exception handling","path":"exception-handling","type":"5. C++ Implementation-defined behavior"},{"name":"6. Extensions to the C Language Family","path":"c-extensions","type":"6. Extensions to the C Language Family"},{"name":"6.1. Statements and Declarations in Expressions","path":"statement-exprs","type":"6. Extensions to the C Language Family"},{"name":"6.2. Locally Declared Labels","path":"local-labels","type":"6. Extensions to the C Language Family"},{"name":"6.3. Labels as Values","path":"labels-as-values","type":"6. Extensions to the C Language Family"},{"name":"6.4. Nested Functions","path":"nested-functions","type":"6. Extensions to the C Language Family"},{"name":"6.5. Constructing Function Calls","path":"constructing-calls","type":"6. Extensions to the C Language Family"},{"name":"6.6. Referring to a Type with typeof","path":"typeof","type":"6. Extensions to the C Language Family"},{"name":"6.7. Conditionals with Omitted Operands","path":"conditionals","type":"6. Extensions to the C Language Family"},{"name":"6.8. 128-bit integers","path":"_005f_005fint128","type":"6. Extensions to the C Language Family"},{"name":"6.9. Double-Word Integers","path":"long-long","type":"6. Extensions to the C Language Family"},{"name":"6.10. Complex Numbers","path":"complex","type":"6. Extensions to the C Language Family"},{"name":"6.11. Additional Floating Types","path":"floating-types","type":"6. Extensions to the C Language Family"},{"name":"6.12. Half-Precision Floating Point","path":"half-precision","type":"6. Extensions to the C Language Family"},{"name":"6.13. Decimal Floating Types","path":"decimal-float","type":"6. Extensions to the C Language Family"},{"name":"6.14. Hex Floats","path":"hex-floats","type":"6. Extensions to the C Language Family"},{"name":"6.15. Fixed-Point Types","path":"fixed-point","type":"6. Extensions to the C Language Family"},{"name":"6.16. Named Address Spaces","path":"named-address-spaces","type":"6. Extensions to the C Language Family"},{"name":"6.17. Arrays of Length Zero","path":"zero-length","type":"6. Extensions to the C Language Family"},{"name":"6.18. Structures With No Members","path":"empty-structures","type":"6. Extensions to the C Language Family"},{"name":"6.19. Arrays of Variable Length","path":"variable-length","type":"6. Extensions to the C Language Family"},{"name":"6.20. Macros with a Variable Number of Arguments.","path":"variadic-macros","type":"6. Extensions to the C Language Family"},{"name":"6.21. Slightly Looser Rules for Escaped Newlines","path":"escaped-newlines","type":"6. Extensions to the C Language Family"},{"name":"6.22. Non-Lvalue Arrays May Have Subscripts","path":"subscripting","type":"6. Extensions to the C Language Family"},{"name":"6.23. Arithmetic on void- and Function-Pointers","path":"pointer-arith","type":"6. Extensions to the C Language Family"},{"name":"6.24. Non-Constant Initializers","path":"initializers","type":"6. Extensions to the C Language Family"},{"name":"6.25. Compound Literals","path":"compound-literals","type":"6. Extensions to the C Language Family"},{"name":"6.26. Designated Initializers","path":"designated-inits","type":"6. Extensions to the C Language Family"},{"name":"6.27. Case Ranges","path":"case-ranges","type":"6. Extensions to the C Language Family"},{"name":"6.28. Cast to a Union Type","path":"cast-to-union","type":"6. Extensions to the C Language Family"},{"name":"6.29. Mixed Declarations and Code","path":"mixed-declarations","type":"6. Extensions to the C Language Family"},{"name":"6.30. Declaring Attributes of Functions","path":"function-attributes","type":"6. Extensions to the C Language Family"},{"name":"6.31. Attribute Syntax","path":"attribute-syntax","type":"6. Extensions to the C Language Family"},{"name":"6.32. Prototypes and Old-Style Function Definitions","path":"function-prototypes","type":"6. Extensions to the C Language Family"},{"name":"6.33. C++ Style Comments","path":"c_002b_002b-comments","type":"6. Extensions to the C Language Family"},{"name":"6.34. Dollar Signs in Identifier Names","path":"dollar-signs","type":"6. Extensions to the C Language Family"},{"name":"6.35. The Character <ESC> in Constants","path":"character-escapes","type":"6. Extensions to the C Language Family"},{"name":"6.36. Specifying Attributes of Variables","path":"variable-attributes","type":"6. Extensions to the C Language Family"},{"name":"6.37. Specifying Attributes of Types","path":"type-attributes","type":"6. Extensions to the C Language Family"},{"name":"6.38. Inquiring on Alignment of Types or Variables","path":"alignment","type":"6. Extensions to the C Language Family"},{"name":"6.39. An Inline Function is As Fast As a Macro","path":"inline","type":"6. Extensions to the C Language Family"},{"name":"6.40. When is a Volatile Object Accessed?","path":"volatiles","type":"6. Extensions to the C Language Family"},{"name":"6.41. Assembler Instructions with C Expression Operands","path":"extended-asm","type":"6. Extensions to the C Language Family"},{"name":"6.42. Constraints for asm Operands","path":"constraints","type":"6. Extensions to the C Language Family"},{"name":"6.42.1. Simple Constraints","path":"simple-constraints","type":"6. Extensions to the C Language Family"},{"name":"6.42.2. Multiple Alternative Constraints","path":"multi-alternative","type":"6. Extensions to the C Language Family"},{"name":"6.42.3. Constraint Modifier Characters","path":"modifiers","type":"6. Extensions to the C Language Family"},{"name":"6.42.4. Constraints for Particular Machines","path":"machine-constraints","type":"6. Extensions to the C Language Family"},{"name":"6.43. Controlling Names Used in Assembler Code","path":"asm-labels","type":"6. Extensions to the C Language Family"},{"name":"6.44. Variables in Specified Registers","path":"explicit-reg-vars","type":"6. Extensions to the C Language Family"},{"name":"6.44.1. Defining Global Register Variables","path":"global-reg-vars","type":"6. Extensions to the C Language Family"},{"name":"6.44.2. Specifying Registers for Local Variables","path":"local-reg-vars","type":"6. Extensions to the C Language Family"},{"name":"6.45. Alternate Keywords","path":"alternate-keywords","type":"6. Extensions to the C Language Family"},{"name":"6.46. Incomplete enum Types","path":"incomplete-enums","type":"6. Extensions to the C Language Family"},{"name":"6.47. Function Names as Strings","path":"function-names","type":"6. Extensions to the C Language Family"},{"name":"6.48. Getting the Return or Frame Address of a Function","path":"return-address","type":"6. Extensions to the C Language Family"},{"name":"6.49. Using Vector Instructions through Built-in Functions","path":"vector-extensions","type":"6. Extensions to the C Language Family"},{"name":"6.50. Offsetof","path":"offsetof","type":"6. Extensions to the C Language Family"},{"name":"6.51. Legacy __sync Built-in Functions for Atomic Memory Access","path":"_005f_005fsync-builtins","type":"6. Extensions to the C Language Family"},{"name":"6.52. Built-in functions for memory model aware atomic operations","path":"_005f_005fatomic-builtins","type":"6. Extensions to the C Language Family"},{"name":"6.53. x86 specific memory model extensions for transactional memory","path":"x86-specific-memory-model-extensions-for-transactional-memory","type":"6. Extensions to the C Language Family"},{"name":"6.54. Object Size Checking Built-in Functions","path":"object-size-checking","type":"6. Extensions to the C Language Family"},{"name":"6.55. Cilk Plus C/C++ language extension Built-in Functions.","path":"cilk-plus-builtins","type":"6. Extensions to the C Language Family"},{"name":"6.56. Other Built-in Functions Provided by GCC","path":"other-builtins","type":"6. Extensions to the C Language Family"},{"name":"6.57. Built-in Functions Specific to Particular Target Machines","path":"target-builtins","type":"6. Extensions to the C Language Family"},{"name":"6.57.1. Alpha Built-in Functions","path":"alpha-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.2. Altera Nios II Built-in Functions","path":"altera-nios-ii-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.3. ARC Built-in Functions","path":"arc-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.4. ARC SIMD Built-in Functions","path":"arc-simd-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.5. ARM iWMMXt Built-in Functions","path":"arm-iwmmxt-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.6. ARM NEON Intrinsics","path":"arm-neon-intrinsics","type":"6. Extensions to the C Language Family"},{"name":"6.57.7. ARM ACLE Intrinsics","path":"arm-acle-intrinsics","type":"6. Extensions to the C Language Family"},{"name":"6.57.8. AVR Built-in Functions","path":"avr-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.9. Blackfin Built-in Functions","path":"blackfin-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.10. FR-V Built-in Functions","path":"fr-v-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.10.1. Argument Types","path":"argument-types","type":"6. Extensions to the C Language Family"},{"name":"6.57.10.2. Directly-mapped Integer Functions","path":"directly-mapped-integer-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.10.3. Directly-mapped Media Functions","path":"directly-mapped-media-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.10.4. Raw read/write Functions","path":"raw-read_002fwrite-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.10.5. Other Built-in Functions","path":"other-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.11. X86 Built-in Functions","path":"x86-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.12. X86 transaction memory intrinsics","path":"x86-transactional-memory-intrinsics","type":"6. Extensions to the C Language Family"},{"name":"6.57.13. MIPS DSP Built-in Functions","path":"mips-dsp-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.14. MIPS Paired-Single Support","path":"mips-paired-single-support","type":"6. Extensions to the C Language Family"},{"name":"6.57.15. MIPS Loongson Built-in Functions","path":"mips-loongson-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.15.1. Paired-Single Arithmetic","path":"paired-single-arithmetic","type":"6. Extensions to the C Language Family"},{"name":"6.57.15.2. Paired-Single Built-in Functions","path":"paired-single-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.15.3. MIPS-3D Built-in Functions","path":"mips-3d-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.16. Other MIPS Built-in Functions","path":"other-mips-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.17. MSP430 Built-in Functions","path":"msp430-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.18. NDS32 Built-in Functions","path":"nds32-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.19. picoChip Built-in Functions","path":"picochip-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.20. PowerPC Built-in Functions","path":"powerpc-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.21. PowerPC AltiVec Built-in Functions","path":"powerpc-altivec_002fvsx-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.22. PowerPC Hardware Transactional Memory Built-in Functions","path":"powerpc-hardware-transactional-memory-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.23. RX Built-in Functions","path":"rx-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.24. S/390 System z Built-in Functions","path":"s_002f390-system-z-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.25. SH Built-in Functions","path":"sh-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.26. SPARC VIS Built-in Functions","path":"sparc-vis-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.27. SPU Built-in Functions","path":"spu-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.28. TI C6X Built-in Functions","path":"ti-c6x-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.29. TILE-Gx Built-in Functions","path":"tile-gx-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.57.30. TILEPro Built-in Functions","path":"tilepro-built-in-functions","type":"6. Extensions to the C Language Family"},{"name":"6.58. Format Checks Specific to Particular Target Machines","path":"target-format-checks","type":"6. Extensions to the C Language Family"},{"name":"6.58.1. Solaris Format Checks","path":"solaris-format-checks","type":"6. Extensions to the C Language Family"},{"name":"6.58.2. Darwin Format Checks","path":"darwin-format-checks","type":"6. Extensions to the C Language Family"},{"name":"6.59. Pragmas Accepted by GCC","path":"pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.1. ARM Pragmas","path":"arm-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.2. M32C Pragmas","path":"m32c-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.3. MeP Pragmas","path":"mep-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.4. RS/6000 and PowerPC Pragmas","path":"rs_002f6000-and-powerpc-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.5. Darwin Pragmas","path":"darwin-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.6. Solaris Pragmas","path":"solaris-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.7. Symbol-Renaming Pragmas","path":"symbol-renaming-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.8. Structure-Packing Pragmas","path":"structure-packing-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.9. Weak Pragmas","path":"weak-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.10. Diagnostic Pragmas","path":"diagnostic-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.11. Visibility Pragmas","path":"visibility-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.12. Push/Pop Macro Pragmas","path":"push_002fpop-macro-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.13. Function Specific Option Pragmas","path":"function-specific-option-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.59.14. Loop-Specific Pragmas","path":"loop-specific-pragmas","type":"6. Extensions to the C Language Family"},{"name":"6.60. Unnamed struct/union fields within structs/unions","path":"unnamed-fields","type":"6. Extensions to the C Language Family"},{"name":"6.61. Thread-Local Storage","path":"thread-local","type":"6. Extensions to the C Language Family"},{"name":"6.61.1. ISO/IEC 9899:1999 Edits for Thread-Local Storage","path":"c99-thread-local-edits","type":"6. Extensions to the C Language Family"},{"name":"6.61.2. ISO/IEC 14882:1998 Edits for Thread-Local Storage","path":"c_002b_002b98-thread-local-edits","type":"6. Extensions to the C Language Family"},{"name":"6.62. Binary constants using the ‘0b’ prefix","path":"binary-constants","type":"6. Extensions to the C Language Family"},{"name":"7. Extensions to the C++ Language","path":"c_002b_002b-extensions","type":"7. Extensions to the C++ Language"},{"name":"7.1. When is a Volatile C++ Object Accessed?","path":"c_002b_002b-volatiles","type":"7. Extensions to the C++ Language"},{"name":"7.2. Restricting Pointer Aliasing","path":"restricted-pointers","type":"7. Extensions to the C++ Language"},{"name":"7.3. Vague Linkage","path":"vague-linkage","type":"7. Extensions to the C++ Language"},{"name":"7.4. #pragma interface and implementation","path":"c_002b_002b-interface","type":"7. Extensions to the C++ Language"},{"name":"7.5. Where's the Template?","path":"template-instantiation","type":"7. Extensions to the C++ Language"},{"name":"7.6. Extracting the function pointer from a bound pointer to member function","path":"bound-member-functions","type":"7. Extensions to the C++ Language"},{"name":"7.7. C++-Specific Variable, Function, and Type Attributes","path":"c_002b_002b-attributes","type":"7. Extensions to the C++ Language"},{"name":"7.8. Function Multiversioning","path":"function-multiversioning","type":"7. Extensions to the C++ Language"},{"name":"7.9. Namespace Association","path":"namespace-association","type":"7. Extensions to the C++ Language"},{"name":"7.10. Type Traits","path":"type-traits","type":"7. Extensions to the C++ Language"},{"name":"7.11. Java Exceptions","path":"java-exceptions","type":"7. Extensions to the C++ Language"},{"name":"7.12. Deprecated Features","path":"deprecated-features","type":"7. Extensions to the C++ Language"},{"name":"7.13. Backwards Compatibility","path":"backwards-compatibility","type":"7. Extensions to the C++ Language"},{"name":"8. GNU Objective-C features","path":"objective-c","type":"8. GNU Objective-C features"},{"name":"8.1. GNU Objective-C runtime API","path":"gnu-objective-c-runtime-api","type":"8. GNU Objective-C features"},{"name":"8.1.1. Modern GNU Objective-C runtime API","path":"modern-gnu-objective-c-runtime-api","type":"8. GNU Objective-C features"},{"name":"8.1.2. Traditional GNU Objective-C runtime API","path":"traditional-gnu-objective-c-runtime-api","type":"8. GNU Objective-C features"},{"name":"8.2. +load: Executing code before main","path":"executing-code-before-main","type":"8. GNU Objective-C features"},{"name":"8.2.1. What you can and what you cannot do in +load","path":"what-you-can-and-what-you-cannot-do-in-_002bload","type":"8. GNU Objective-C features"},{"name":"8.3. Type encoding","path":"type-encoding","type":"8. GNU Objective-C features"},{"name":"8.3.1. Legacy type encoding","path":"legacy-type-encoding","type":"8. GNU Objective-C features"},{"name":"8.3.2. @encode","path":"_0040encode","type":"8. GNU Objective-C features"},{"name":"8.3.3. Method signatures","path":"method-signatures","type":"8. GNU Objective-C features"},{"name":"8.4. Garbage Collection","path":"garbage-collection","type":"8. GNU Objective-C features"},{"name":"8.5. Constant string objects","path":"constant-string-objects","type":"8. GNU Objective-C features"},{"name":"8.6. compatibility_alias","path":"compatibility_005falias","type":"8. GNU Objective-C features"},{"name":"8.7. Exceptions","path":"exceptions","type":"8. GNU Objective-C features"},{"name":"8.8. Synchronization","path":"synchronization","type":"8. GNU Objective-C features"},{"name":"8.9. Fast enumeration","path":"fast-enumeration","type":"8. GNU Objective-C features"},{"name":"8.9.1. Using fast enumeration","path":"using-fast-enumeration","type":"8. GNU Objective-C features"},{"name":"8.9.2. c99-like fast enumeration syntax","path":"c99-like-fast-enumeration-syntax","type":"8. GNU Objective-C features"},{"name":"8.9.3. Fast enumeration details","path":"fast-enumeration-details","type":"8. GNU Objective-C features"},{"name":"8.9.4. Fast enumeration protocol","path":"fast-enumeration-protocol","type":"8. GNU Objective-C features"},{"name":"8.10. Messaging with the GNU Objective-C runtime","path":"messaging-with-the-gnu-objective-c-runtime","type":"8. GNU Objective-C features"},{"name":"8.10.1. Dynamically registering methods","path":"dynamically-registering-methods","type":"8. GNU Objective-C features"},{"name":"8.10.2. Forwarding hook","path":"forwarding-hook","type":"8. GNU Objective-C features"},{"name":"9. Binary Compatibility","path":"compatibility","type":"9. Binary Compatibility"},{"name":"10. gcov","path":"gcov","type":"10. gcov"},{"name":"10.1. Introduction to gcov","path":"gcov-intro","type":"10. gcov"},{"name":"10.2. Invoking gcov","path":"invoking-gcov","type":"10. gcov"},{"name":"10.3. Using gcov with GCC Optimization","path":"gcov-and-optimization","type":"10. gcov"},{"name":"10.4. Brief description of gcov data files","path":"gcov-data-files","type":"10. gcov"},{"name":"10.5. Data file relocation to support cross-profiling","path":"cross-profiling","type":"10. gcov"},{"name":"11. Known Causes of Trouble with GCC","path":"trouble","type":"11. Known Causes of Trouble"},{"name":"11.1. Actual Bugs We Haven't Fixed Yet","path":"actual-bugs","type":"11. Known Causes of Trouble"},{"name":"11.2. Interoperation","path":"interoperation","type":"11. Known Causes of Trouble"},{"name":"11.3. Incompatibilities of GCC","path":"incompatibilities","type":"11. Known Causes of Trouble"},{"name":"11.4. Fixed Header Files","path":"fixed-headers","type":"11. Known Causes of Trouble"},{"name":"11.5. Standard Libraries","path":"standard-libraries","type":"11. Known Causes of Trouble"},{"name":"11.6. Disappointments and Misunderstandings","path":"disappointments","type":"11. Known Causes of Trouble"},{"name":"11.7. Common Misunderstandings with GNU C++","path":"c_002b_002b-misunderstandings","type":"11. Known Causes of Trouble"},{"name":"11.7.1. Declare and Define Static Members","path":"static-definitions","type":"11. Known Causes of Trouble"},{"name":"11.7.2. Name lookup, templates, and accessing members of base classes","path":"name-lookup","type":"11. Known Causes of Trouble"},{"name":"11.7.3. Temporaries May Vanish Before You Expect","path":"temporaries","type":"11. Known Causes of Trouble"},{"name":"11.7.4. Implicit Copy-Assignment for Virtual Bases","path":"copy-assignment","type":"11. Known Causes of Trouble"},{"name":"11.8. Certain Changes We Don't Want to Make","path":"non-bugs","type":"11. Known Causes of Trouble"},{"name":"11.9. Warning Messages and Error Messages","path":"warnings-and-errors","type":"11. Known Causes of Trouble"},{"name":"Using the GNU Compiler Collection (GCC)","path":"g_002b_002b-and-gcc","type":"1. Programming Languages Supported by GCC"}],"types":[{"name":"1. Programming Languages Supported by GCC","count":1,"slug":"1-programming-languages-supported-by-gcc"},{"name":"2. Language Standards Supported by GCC","count":1,"slug":"2-language-standards-supported-by-gcc"},{"name":"3. GCC Command Options","count":77,"slug":"3-gcc-command-options"},{"name":"4. C Implementation-defined behavior","count":17,"slug":"4-c-implementation-defined-behavior"},{"name":"5. C++ Implementation-defined behavior","count":3,"slug":"5-c-implementation-defined-behavior"},{"name":"6. Extensions to the C Language Family","count":125,"slug":"6-extensions-to-the-c-language-family"},{"name":"7. Extensions to the C++ Language","count":14,"slug":"7-extensions-to-the-c-language"},{"name":"8. GNU Objective-C features","count":23,"slug":"8-gnu-objective-c-features"},{"name":"9. Binary Compatibility","count":1,"slug":"9-binary-compatibility"},{"name":"10. gcov","count":6,"slug":"10-gcov"},{"name":"11. Known Causes of Trouble","count":14,"slug":"11-known-causes-of-trouble"}]};