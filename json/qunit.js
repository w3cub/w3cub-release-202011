app.DOC = {"name":"QUnit","slug":"qunit","type":"qunit","links":{"home":"https://qunitjs.com/","code":"https://github.com/qunitjs/qunit"},"release":"2.19.3","mtime":1671573656,"db_size":203000};
app.INDEXDOC = {"entries":[{"name":"assert.async()","path":"assert/async","type":"2. Assertions"},{"name":"assert.deepEqual()","path":"assert/deepequal","type":"2. Assertions"},{"name":"assert.equal()","path":"assert/equal","type":"2. Assertions"},{"name":"assert.expect()","path":"assert/expect","type":"2. Assertions"},{"name":"assert.false()","path":"assert/false","type":"2. Assertions"},{"name":"assert.notDeepEqual()","path":"assert/notdeepequal","type":"2. Assertions"},{"name":"assert.notEqual()","path":"assert/notequal","type":"2. Assertions"},{"name":"assert.notOk()","path":"assert/notok","type":"2. Assertions"},{"name":"assert.notPropContains()","path":"assert/notpropcontains","type":"2. Assertions"},{"name":"assert.notPropEqual()","path":"assert/notpropequal","type":"2. Assertions"},{"name":"assert.notStrictEqual()","path":"assert/notstrictequal","type":"2. Assertions"},{"name":"assert.ok()","path":"assert/ok","type":"2. Assertions"},{"name":"assert.propContains()","path":"assert/propcontains","type":"2. Assertions"},{"name":"assert.propEqual()","path":"assert/propequal","type":"2. Assertions"},{"name":"assert.pushResult()","path":"assert/pushresult","type":"2. Assertions"},{"name":"assert.rejects()","path":"assert/rejects","type":"2. Assertions"},{"name":"assert.step()","path":"assert/step","type":"2. Assertions"},{"name":"assert.strictEqual()","path":"assert/strictequal","type":"2. Assertions"},{"name":"assert.throws()","path":"assert/throws","type":"2. Assertions"},{"name":"assert.timeout()","path":"assert/timeout","type":"2. Assertions"},{"name":"assert.true()","path":"assert/true","type":"2. Assertions"},{"name":"assert.verifySteps()","path":"assert/verifysteps","type":"2. Assertions"},{"name":"QUnit.assert","path":"extension/qunit.assert","type":"5. Extension interface"},{"name":"QUnit.begin()","path":"callbacks/qunit.begin","type":"3. Callback events"},{"name":"QUnit.config.altertitle","path":"config/altertitle","type":"4. Configuration"},{"name":"QUnit.config.autostart","path":"config/autostart","type":"4. Configuration"},{"name":"QUnit.config.collapse","path":"config/collapse","type":"4. Configuration"},{"name":"QUnit.config.current","path":"config/current","type":"4. Configuration"},{"name":"QUnit.config.failOnZeroTests","path":"config/failonzerotests","type":"4. Configuration"},{"name":"QUnit.config.filter","path":"config/filter","type":"4. Configuration"},{"name":"QUnit.config.fixture","path":"config/fixture","type":"4. Configuration"},{"name":"QUnit.config.hidepassed","path":"config/hidepassed","type":"4. Configuration"},{"name":"QUnit.config.maxDepth","path":"config/maxdepth","type":"4. Configuration"},{"name":"QUnit.config.module","path":"config/module","type":"4. Configuration"},{"name":"QUnit.config.moduleId","path":"config/moduleid","type":"4. Configuration"},{"name":"QUnit.config.noglobals","path":"config/noglobals","type":"4. Configuration"},{"name":"QUnit.config.notrycatch","path":"config/notrycatch","type":"4. Configuration"},{"name":"QUnit.config.reorder","path":"config/reorder","type":"4. Configuration"},{"name":"QUnit.config.requireExpects","path":"config/requireexpects","type":"4. Configuration"},{"name":"QUnit.config.scrolltop","path":"config/scrolltop","type":"4. Configuration"},{"name":"QUnit.config.seed","path":"config/seed","type":"4. Configuration"},{"name":"QUnit.config.storage","path":"config/storage","type":"4. Configuration"},{"name":"QUnit.config.testId","path":"config/testid","type":"4. Configuration"},{"name":"QUnit.config.testTimeout","path":"config/testtimeout","type":"4. Configuration"},{"name":"QUnit.config.urlConfig","path":"config/urlconfig","type":"4. Configuration"},{"name":"QUnit.done()","path":"callbacks/qunit.done","type":"3. Callback events"},{"name":"QUnit.dump.parse()","path":"extension/qunit.dump.parse","type":"5. Extension interface"},{"name":"QUnit.extend()","path":"extension/qunit.extend","type":"5. Extension interface"},{"name":"QUnit.hooks","path":"qunit/hooks","type":"1. Main methods"},{"name":"QUnit.log()","path":"callbacks/qunit.log","type":"3. Callback events"},{"name":"QUnit.module()","path":"qunit/module","type":"1. Main methods"},{"name":"QUnit.moduleDone()","path":"callbacks/qunit.moduledone","type":"3. Callback events"},{"name":"QUnit.moduleStart()","path":"callbacks/qunit.modulestart","type":"3. Callback events"},{"name":"QUnit.on()","path":"callbacks/qunit.on","type":"3. Callback events"},{"name":"QUnit.onUncaughtException()","path":"extension/qunit.onuncaughtexception","type":"5. Extension interface"},{"name":"QUnit.push()","path":"extension/qunit.push","type":"5. Extension interface"},{"name":"QUnit.stack()","path":"extension/qunit.stack","type":"5. Extension interface"},{"name":"QUnit.start()","path":"qunit/start","type":"1. Main methods"},{"name":"QUnit.test()","path":"qunit/test","type":"1. Main methods"},{"name":"QUnit.test.each()","path":"qunit/test.each","type":"1. Main methods"},{"name":"QUnit.test.only()","path":"qunit/test.only","type":"1. Main methods"},{"name":"QUnit.test.skip()","path":"qunit/test.skip","type":"1. Main methods"},{"name":"QUnit.test.todo()","path":"qunit/test.todo","type":"1. Main methods"},{"name":"QUnit.testDone()","path":"callbacks/qunit.testdone","type":"3. Callback events"},{"name":"QUnit.testStart()","path":"callbacks/qunit.teststart","type":"3. Callback events"}],"types":[{"name":"1. Main methods","count":8,"slug":"1-main-methods"},{"name":"2. Assertions","count":22,"slug":"2-assertions"},{"name":"3. Callback events","count":8,"slug":"3-callback-events"},{"name":"4. Configuration","count":21,"slug":"4-configuration"},{"name":"5. Extension interface","count":6,"slug":"5-extension-interface"}]};